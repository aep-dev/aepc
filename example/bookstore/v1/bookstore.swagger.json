{
  "swagger": "2.0",
  "info": {
    "title": "example/bookstore/v1/bookstore.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "Bookstore"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/isbns": {
      "get": {
        "summary": "An aep-compliant List method for isbns.",
        "operationId": "Bookstore_ListIsbns",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListIsbnsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent",
            "description": "A field for the parent of isbn",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageToken",
            "description": "The page token indicating the starting point of the page",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "maxPageSize",
            "description": "The maximum number of resources to return in a single page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Bookstore"
        ]
      },
      "post": {
        "summary": "An aep-compliant Create method for isbn.",
        "operationId": "Bookstore_CreateIsbn",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Isbn"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "isbn",
            "description": "The resource to perform the operation on.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Isbn",
              "required": [
                "isbn"
              ]
            }
          },
          {
            "name": "parent",
            "description": "A field for the parent of isbn",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "description": "An id that uniquely identifies the resource within the collection",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Bookstore"
        ]
      }
    },
    "/publishers": {
      "get": {
        "summary": "An aep-compliant List method for publishers.",
        "operationId": "Bookstore_ListPublishers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListPublishersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent",
            "description": "A field for the parent of publisher",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageToken",
            "description": "The page token indicating the starting point of the page",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "maxPageSize",
            "description": "The maximum number of resources to return in a single page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "skip",
            "description": "The number of resources to skip before returning the first resource in the page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter",
            "description": "The filter to apply to the list.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Bookstore"
        ]
      },
      "post": {
        "summary": "An aep-compliant Create method for publisher.",
        "operationId": "Bookstore_CreatePublisher",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Publisher"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "publisher",
            "description": "The resource to perform the operation on.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Publisher",
              "required": [
                "publisher"
              ]
            }
          },
          {
            "name": "parent",
            "description": "A field for the parent of publisher",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "description": "An id that uniquely identifies the resource within the collection",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Bookstore"
        ]
      }
    },
    "/{parent}/books": {
      "get": {
        "summary": "An aep-compliant List method for books.",
        "operationId": "Bookstore_ListBooks",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListBooksResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent",
            "description": "A field for the parent of book",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "publishers/[^/]+"
          },
          {
            "name": "pageToken",
            "description": "The page token indicating the starting point of the page",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "maxPageSize",
            "description": "The maximum number of resources to return in a single page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Bookstore"
        ]
      },
      "post": {
        "summary": "An aep-compliant Create method for book.",
        "operationId": "Bookstore_CreateBook",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Book"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent",
            "description": "A field for the parent of book",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "publishers/[^/]+"
          },
          {
            "name": "book",
            "description": "The resource to perform the operation on.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Book",
              "required": [
                "book"
              ]
            }
          },
          {
            "name": "id",
            "description": "An id that uniquely identifies the resource within the collection",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Bookstore"
        ]
      }
    },
    "/{parent}/editions": {
      "get": {
        "summary": "An aep-compliant List method for book-editions.",
        "operationId": "Bookstore_ListBookEditions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListBookEditionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent",
            "description": "A field for the parent of book-edition",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "publishers/[^/]+/books/[^/]+"
          },
          {
            "name": "pageToken",
            "description": "The page token indicating the starting point of the page",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "maxPageSize",
            "description": "The maximum number of resources to return in a single page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Bookstore"
        ]
      },
      "post": {
        "summary": "An aep-compliant Create method for book-edition.",
        "operationId": "Bookstore_CreateBookEdition",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1BookEdition"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent",
            "description": "A field for the parent of book-edition",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "publishers/[^/]+/books/[^/]+"
          },
          {
            "name": "bookEdition",
            "description": "The resource to perform the operation on.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1BookEdition",
              "required": [
                "bookEdition"
              ]
            }
          },
          {
            "name": "id",
            "description": "An id that uniquely identifies the resource within the collection",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Bookstore"
        ]
      }
    },
    "/{path_1}": {
      "get": {
        "summary": "An aep-compliant Get method for book-edition.",
        "operationId": "Bookstore_GetBookEdition",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1BookEdition"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "path_1",
            "description": "The globally unique identifier for the resource",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "publishers/[^/]+/books/[^/]+/editions/[^/]+"
          }
        ],
        "tags": [
          "Bookstore"
        ]
      },
      "delete": {
        "summary": "An aep-compliant Delete method for book-edition.",
        "operationId": "Bookstore_DeleteBookEdition",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "path_1",
            "description": "The globally unique identifier for the resource",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "publishers/[^/]+/books/[^/]+/editions/[^/]+"
          }
        ],
        "tags": [
          "Bookstore"
        ]
      },
      "put": {
        "summary": "An aep-compliant Apply method for publishers.",
        "operationId": "Bookstore_ApplyPublisher",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Publisher"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "path_1",
            "description": "The globally unique identifier for the resource",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "publishers/[^/]+"
          },
          {
            "name": "publisher",
            "description": "The resource to perform the operation on.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Publisher",
              "required": [
                "publisher"
              ]
            }
          }
        ],
        "tags": [
          "Bookstore"
        ]
      },
      "patch": {
        "summary": "An aep-compliant Update method for publisher.",
        "operationId": "Bookstore_UpdatePublisher",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Publisher"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "path_1",
            "description": "The globally unique identifier for the resource",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "publishers/[^/]+"
          },
          {
            "name": "publisher",
            "description": "The resource to perform the operation on.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Publisher",
              "required": [
                "publisher"
              ]
            }
          }
        ],
        "tags": [
          "Bookstore"
        ]
      }
    },
    "/{path_2}": {
      "get": {
        "summary": "An aep-compliant Get method for isbn.",
        "operationId": "Bookstore_GetIsbn",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Isbn"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "path_2",
            "description": "The globally unique identifier for the resource",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "isbns/[^/]+"
          }
        ],
        "tags": [
          "Bookstore"
        ]
      },
      "delete": {
        "summary": "An aep-compliant Delete method for publisher.",
        "operationId": "Bookstore_DeletePublisher",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "path_2",
            "description": "The globally unique identifier for the resource",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "publishers/[^/]+"
          },
          {
            "name": "force",
            "description": "If true, the resource will be deleted, even if children still exist.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Bookstore"
        ]
      }
    },
    "/{path_3}": {
      "get": {
        "summary": "An aep-compliant Get method for publisher.",
        "operationId": "Bookstore_GetPublisher",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Publisher"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "path_3",
            "description": "The globally unique identifier for the resource",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "publishers/[^/]+"
          }
        ],
        "tags": [
          "Bookstore"
        ]
      }
    },
    "/{path}": {
      "get": {
        "summary": "An aep-compliant Get method for book.",
        "operationId": "Bookstore_GetBook",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Book"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "path",
            "description": "The globally unique identifier for the resource",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "publishers/[^/]+/books/[^/]+"
          }
        ],
        "tags": [
          "Bookstore"
        ]
      },
      "delete": {
        "summary": "An aep-compliant Delete method for book.",
        "operationId": "Bookstore_DeleteBook",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "path",
            "description": "The globally unique identifier for the resource",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "publishers/[^/]+/books/[^/]+"
          },
          {
            "name": "force",
            "description": "If true, the resource will be deleted, even if children still exist.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Bookstore"
        ]
      },
      "put": {
        "summary": "An aep-compliant Apply method for books.",
        "operationId": "Bookstore_ApplyBook",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Book"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "path",
            "description": "The globally unique identifier for the resource",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "publishers/[^/]+/books/[^/]+"
          },
          {
            "name": "book",
            "description": "The resource to perform the operation on.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Book",
              "required": [
                "book"
              ]
            }
          }
        ],
        "tags": [
          "Bookstore"
        ]
      },
      "patch": {
        "summary": "An aep-compliant Update method for book.",
        "operationId": "Bookstore_UpdateBook",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Book"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "path",
            "description": "The globally unique identifier for the resource",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "publishers/[^/]+/books/[^/]+"
          },
          {
            "name": "book",
            "description": "The resource to perform the operation on.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Book",
              "required": [
                "book"
              ]
            }
          }
        ],
        "tags": [
          "Bookstore"
        ]
      }
    },
    "/{path}:archive": {
      "post": {
        "summary": "archive a book.",
        "operationId": "Bookstore_archiveBook",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiOperation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "path",
            "description": "The globally unique identifier for the resource",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "publishers/[^/]+/books/[^/]+"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "Request message for the archive method"
            }
          }
        ],
        "tags": [
          "Bookstore"
        ]
      }
    }
  },
  "definitions": {
    "BookAuthor": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string",
          "description": "Field for firstName."
        },
        "lastName": {
          "type": "string",
          "description": "Field for lastName."
        }
      },
      "description": "A Author."
    },
    "apiOperation": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "description": "The server-assigned path, which is only unique within the same service that\noriginally returns it. If you use the default HTTP mapping, the\n`path` should be a resource path ending with `operations/{unique_id}`."
        },
        "metadata": {
          "$ref": "#/definitions/protobufAny",
          "description": "Service-specific metadata associated with the operation.  It typically\ncontains progress information and common metadata such as create time.\nSome services might not provide such metadata.  Any method that returns a\nlong-running operation should document the metadata type, if any."
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress.\nIf `true`, the operation is completed, and either `error` or `response` is\navailable."
        },
        "error": {
          "$ref": "#/definitions/apiProblemDetails",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "response": {
          "$ref": "#/definitions/protobufAny",
          "description": "The normal response of the operation in case of success.  If the original\nmethod returns no data on success, such as `Delete`, the response is\n`google.protobuf.Empty`.  If the original method is standard\n`Get`/`Create`/`Update`, the response should be the resource.  For other\nmethods, the response should have the type `XxxResponse`, where `Xxx`\nis the original method name.  For example, if the original method name\nis `TakeSnapshot()`, the inferred response type is\n`TakeSnapshotResponse`."
        }
      },
      "description": "This resource represents a long-running operation that is the result of a\nnetwork API call."
    },
    "apiProblemDetails": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "A URI reference that identifies the problem type.\n\nConsumers **must** use the \"type\" URI (after resolution, if necessary) as\nthe problem type's primary identifier.\n\nWhen this member is not present, its value is assumed to be \"about:blank\".\n\nIf the type URI is a locator (e.g., those with an \"http\" or \"https\"\nscheme), dereferencing it **should** provide human-readable documentation\nfor the problem type (e.g., using HTML). However, consumers **should not**\nautomatically dereference the type URI, unless they do so when\nproviding information to developers (e.g., when a debugging tool is in\nuse).\n\nWhen \"type\" contains a relative URI, it is resolved relative to the\ndocument's base URI, as per [URI], Section 5. However, using relative URIs\ncan cause confusion, and they might not be handled correctly by all\nimplementations.\n\nFor example, if the two resources \"https://api.example.org/foo/bar/123\" and\n\"https://api.example.org/widget/456\" both respond with a \"type\" equal to\nthe relative URI reference \"example-problem\", when resolved they will\nidentify different resources\n(\"https://api.example.org/foo/bar/example-problem\" and\n\"https://api.example.org/widget/example-problem\", respectively). As a\nresult, it is RECOMMENDED that absolute URIs be used in \"type\" when\npossible and that when relative URIs are used, they include the full path\n(e.g., \"/types/123\").\n\nThe type URI is allowed to be a non-resolvable URI. For example, the tag\nURI scheme [TAG] can be used to uniquely identify problem types:\n\n  `tag:example@example.org,2021-09-17:OutOfLuck`\n\nHowever, resolvable type URIs are encouraged by this specification because\nit might become desirable to resolve the URI in the future. For example, if\nan API designer used the URI above and later adopted a tool that resolves\ntype URIs to discover information about the error, taking advantage of that\ncapability would require switching to a resolvable URI, creating a new\nidentity for the problem type and thus introducing a breaking change."
        },
        "status": {
          "type": "integer",
          "format": "int32",
          "description": "Indicates the HTTP status code generated by the origin server for this\noccurrence of the problem.\n\nThe \"status\" member, if present, is only advisory; it conveys the HTTP\nstatus code used for the convenience of the consumer. Generators **must**\nuse the same status code in the actual HTTP response, to assure that\ngeneric HTTP software that does not understand this format still behaves\ncorrectly. See Section 5 for further caveats regarding its use.\n\nConsumers can use the status member to determine what the original status\ncode used by the generator was when it has been changed (e.g., by an\nintermediary or cache) and when a message's content is persisted without\nHTTP information. Generic HTTP software will still use the HTTP status\ncode."
        },
        "title": {
          "type": "string",
          "description": "Contains a short, human-readable summary of the problem type.\n\nIt **should not** change from occurrence to occurrence of the problem,\nexcept for localization (e.g., using proactive content negotiation; see\n[HTTP], Section 12.1).\n\nThe \"title\" string is advisory and is included only for users who are\nunaware of and cannot discover the semantics of the type URI (e.g., during\noffline log analysis)."
        },
        "detail": {
          "type": "string",
          "description": "Contains a human-readable explanation specific to this occurrence of the\nproblem.\n\nThe \"detail\" string, if present, ought to focus on helping the client\ncorrect the problem, rather than giving debugging information.\n\nConsumers **should not** parse the \"detail\" member for information;\nextensions are more suitable and less error-prone ways to obtain such\ninformation."
        },
        "instance": {
          "type": "string",
          "description": "Contains a URI reference that identifies the specific occurrence of the\nproblem.\n\nWhen the \"instance\" URI is dereferenceable, the problem details object can\nbe fetched from it. It might also return information about the problem\noccurrence in other formats through use of proactive content negotiation\n(see [HTTP], Section 12.5.1).\n\nWhen the \"instance\" URI is not dereferenceable, it serves as a unique\nidentifier for the problem occurrence that may be of significance to the\nserver but is opaque to the client.\n\nWhen \"instance\" contains a relative URI, it is resolved relative to the\ndocument's base URI, as per [URI], Section 5. However, using relative URIs\ncan cause confusion, and they might not be handled correctly by all\nimplementations.\n\nFor example, if the two resources \"https://api.example.org/foo/bar/123\" and\n\"https://api.example.org/widget/456\" both respond with an \"instance\" equal\nto the relative URI reference \"example-instance\", when resolved they will\nidentify different resources\n(\"https://api.example.org/foo/bar/example-instance\" and\n\"https://api.example.org/widget/example-instance\", respectively). As a\nresult, it is RECOMMENDED that absolute URIs be used in \"instance\" when\npossible, and that when relative URIs are used, they include the full path\n(e.g., \"/instances/123\")."
        },
        "extraDetails": {
          "$ref": "#/definitions/protobufAny",
          "description": "Additional details about the problem.\n\nAPIs using `additional_details` **should** also populate the applicable\ntop-field fields of ProblemDetails; `additional_details` **should not** be\nused as a substitute for ProblemDetails."
        }
      },
      "description": "ProblemDetails corresponds to the structure described by RFC 9457.\n\nThe documentation of each field is drawn directly from RFC 9457 (edited only\nfor formatting and to remove type information redundant with field type).\n\nIt is intended to be used as the contents of the `details` field of a\ngoogle.rpc.Status.\n\nThe `additional_details` field is provided for APIs which need to provide\nadditional structured error information."
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com. As of May 2023, there are no widely used type server\nimplementations and no plans to implement one.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        }
      },
      "additionalProperties": {},
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n    // or ...\n    if (any.isSameTypeAs(Foo.getDefaultInstance())) {\n      foo = any.unpack(Foo.getDefaultInstance());\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := \u0026pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1Book": {
      "type": "object",
      "properties": {
        "author": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/BookAuthor"
          },
          "description": "Field for author."
        },
        "isbn": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Field for isbn."
        },
        "price": {
          "type": "number",
          "format": "float",
          "description": "Field for price."
        },
        "published": {
          "type": "boolean",
          "description": "Field for published."
        },
        "edition": {
          "type": "integer",
          "format": "int32",
          "description": "Field for edition."
        },
        "path": {
          "type": "string",
          "description": "Field for path."
        }
      },
      "description": "A Book.",
      "required": [
        "isbn",
        "price",
        "published"
      ]
    },
    "v1BookEdition": {
      "type": "object",
      "properties": {
        "displayname": {
          "type": "string",
          "description": "Field for displayname."
        },
        "path": {
          "type": "string",
          "description": "Field for path."
        }
      },
      "description": "A BookEdition.",
      "required": [
        "displayname"
      ]
    },
    "v1Isbn": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "description": "Field for path."
        }
      },
      "description": "A Isbn."
    },
    "v1ListBookEditionsResponse": {
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1BookEdition"
          },
          "title": "A list of book-editions"
        },
        "nextPageToken": {
          "type": "string",
          "description": "The page token indicating the ending point of this response."
        }
      },
      "title": "Response message for the Listbook-edition method"
    },
    "v1ListBooksResponse": {
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Book"
          },
          "title": "A list of books"
        },
        "nextPageToken": {
          "type": "string",
          "description": "The page token indicating the ending point of this response."
        },
        "unreachable": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Book"
          },
          "description": "A list of books that were not reachable."
        }
      },
      "title": "Response message for the Listbook method"
    },
    "v1ListIsbnsResponse": {
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Isbn"
          },
          "title": "A list of isbns"
        },
        "nextPageToken": {
          "type": "string",
          "description": "The page token indicating the ending point of this response."
        }
      },
      "title": "Response message for the Listisbn method"
    },
    "v1ListPublishersResponse": {
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Publisher"
          },
          "title": "A list of publishers"
        },
        "nextPageToken": {
          "type": "string",
          "description": "The page token indicating the ending point of this response."
        }
      },
      "title": "Response message for the Listpublisher method"
    },
    "v1Publisher": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "Field for description."
        },
        "path": {
          "type": "string",
          "description": "Field for path."
        }
      },
      "description": "A Publisher."
    }
  }
}
