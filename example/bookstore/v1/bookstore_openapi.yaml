components:
  schemas:
    book:
      properties:
        author:
          items:
            type: object
          type: array
        edition:
          format: int32
          type: integer
        id:
          readOnly: true
          type: string
          x-terraform-id: true
        isbn:
          items:
            type: string
          type: array
        path:
          readOnly: true
          type: string
        price:
          format: float
          type: number
        published:
          type: boolean
      required:
      - isbn
      - price
      - published
      type: object
      x-aep-resource:
        parents:
        - publisher
        patterns:
        - /publishers/{publisher}/books/{book}
        plural: books
        singular: book
    book-edition:
      properties:
        displayname:
          type: string
        id:
          readOnly: true
          type: string
          x-terraform-id: true
        path:
          readOnly: true
          type: string
      required:
      - displayname
      type: object
      x-aep-resource:
        parents:
        - book
        patterns:
        - /publishers/{publisher}/books/{book}/editions/{book-edition}
        plural: book-editions
        singular: book-edition
    isbn:
      properties:
        id:
          readOnly: true
          type: string
          x-terraform-id: true
        path:
          readOnly: true
          type: string
      type: object
      x-aep-resource:
        patterns:
        - /isbns/{isbn}
        plural: isbns
        singular: isbn
    publisher:
      properties:
        description:
          type: string
        id:
          readOnly: true
          type: string
          x-terraform-id: true
        path:
          readOnly: true
          type: string
      type: object
      x-aep-resource:
        patterns:
        - /publishers/{publisher}
        plural: publishers
        singular: publisher
info:
  title: bookstore.example.com
  version: version not set
paths:
  /isbns:
    post:
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/components/schemas/isbn'
      - in: query
        name: id
        required: true
        schema: {}
        type: string
      responses:
        "200":
          schema:
            $ref: '#/components/schemas/isbn'
  /isbns/{isbn}:
    get:
      parameters:
      - in: path
        name: isbn
        required: true
        schema: {}
        type: string
      responses:
        "200":
          schema:
            $ref: '#/components/schemas/isbn'
  /publishers:
    get:
      parameters:
      - in: query
        name: max_page_size
        required: true
        schema: {}
        type: integer
      - in: query
        name: page_token
        required: true
        schema: {}
        type: string
      responses:
        "200":
          schema:
            items:
              $ref: '#/components/schemas/publisher'
    post:
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/components/schemas/publisher'
      - in: query
        name: id
        required: true
        schema: {}
        type: string
      responses:
        "200":
          schema:
            $ref: '#/components/schemas/publisher'
  /publishers/{publisher}:
    delete:
      parameters:
      - in: path
        name: publisher
        required: true
        schema: {}
        type: string
      responses:
        "200":
          schema: {}
    get:
      parameters:
      - in: path
        name: publisher
        required: true
        schema: {}
        type: string
      responses:
        "200":
          schema:
            $ref: '#/components/schemas/publisher'
    patch:
      parameters:
      - in: path
        name: publisher
        required: true
        schema: {}
        type: string
      - in: body
        name: body
        schema:
          $ref: '#/components/schemas/publisher'
      responses:
        "200":
          schema:
            $ref: '#/components/schemas/publisher'
    put:
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/components/schemas/publisher'
      responses:
        "200":
          schema:
            $ref: '#/components/schemas/publisher'
  /publishers/{publisher}/books:
    get:
      parameters:
      - in: path
        name: publisher
        required: true
        schema: {}
        type: string
      - in: query
        name: max_page_size
        required: true
        schema: {}
        type: integer
      - in: query
        name: page_token
        required: true
        schema: {}
        type: string
      responses:
        "200":
          schema:
            items:
              $ref: '#/components/schemas/book'
    post:
      parameters:
      - in: path
        name: publisher
        required: true
        schema: {}
        type: string
      - in: body
        name: body
        schema:
          $ref: '#/components/schemas/book'
      - in: query
        name: id
        required: true
        schema: {}
        type: string
      responses:
        "200":
          schema:
            $ref: '#/components/schemas/book'
  /publishers/{publisher}/books/{book}:
    delete:
      parameters:
      - in: path
        name: publisher
        required: true
        schema: {}
        type: string
      - in: path
        name: book
        required: true
        schema: {}
        type: string
      responses:
        "200":
          schema: {}
    get:
      parameters:
      - in: path
        name: publisher
        required: true
        schema: {}
        type: string
      - in: path
        name: book
        required: true
        schema: {}
        type: string
      responses:
        "200":
          schema:
            $ref: '#/components/schemas/book'
    patch:
      parameters:
      - in: path
        name: publisher
        required: true
        schema: {}
        type: string
      - in: path
        name: book
        required: true
        schema: {}
        type: string
      - in: body
        name: body
        schema:
          $ref: '#/components/schemas/book'
      responses:
        "200":
          schema:
            $ref: '#/components/schemas/book'
    put:
      parameters:
      - in: path
        name: publisher
        required: true
        schema: {}
        type: string
      - in: body
        name: body
        schema:
          $ref: '#/components/schemas/book'
      responses:
        "200":
          schema:
            $ref: '#/components/schemas/book'
  /publishers/{publisher}/books/{book}/editions:
    get:
      parameters:
      - in: path
        name: publisher
        required: true
        schema: {}
        type: string
      - in: path
        name: book
        required: true
        schema: {}
        type: string
      - in: query
        name: max_page_size
        required: true
        schema: {}
        type: integer
      - in: query
        name: page_token
        required: true
        schema: {}
        type: string
      responses:
        "200":
          schema:
            items:
              $ref: '#/components/schemas/book-edition'
    post:
      parameters:
      - in: path
        name: publisher
        required: true
        schema: {}
        type: string
      - in: path
        name: book
        required: true
        schema: {}
        type: string
      - in: body
        name: body
        schema:
          $ref: '#/components/schemas/book-edition'
      - in: query
        name: id
        required: true
        schema: {}
        type: string
      responses:
        "200":
          schema:
            $ref: '#/components/schemas/book-edition'
  /publishers/{publisher}/books/{book}/editions/{book-edition}:
    delete:
      parameters:
      - in: path
        name: publisher
        required: true
        schema: {}
        type: string
      - in: path
        name: book
        required: true
        schema: {}
        type: string
      - in: path
        name: book-edition
        required: true
        schema: {}
        type: string
      responses:
        "200":
          schema: {}
    get:
      parameters:
      - in: path
        name: publisher
        required: true
        schema: {}
        type: string
      - in: path
        name: book
        required: true
        schema: {}
        type: string
      - in: path
        name: book-edition
        required: true
        schema: {}
        type: string
      responses:
        "200":
          schema:
            $ref: '#/components/schemas/book-edition'
schemes:
- http
servers:
- url: http://localhost:8081
swagger: "2.0"
