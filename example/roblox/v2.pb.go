// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: example/roblox/v2.proto

package cloud

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// A CreatorStoreProduct.
type CreatorStoreProduct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Field for path.
	Path string `protobuf:"bytes,10000,opt,name=path,proto3" json:"path,omitempty"`
	// Field for id.
	Id string `protobuf:"bytes,10001,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreatorStoreProduct) Reset() {
	*x = CreatorStoreProduct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_roblox_v2_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatorStoreProduct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatorStoreProduct) ProtoMessage() {}

func (x *CreatorStoreProduct) ProtoReflect() protoreflect.Message {
	mi := &file_example_roblox_v2_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatorStoreProduct.ProtoReflect.Descriptor instead.
func (*CreatorStoreProduct) Descriptor() ([]byte, []int) {
	return file_example_roblox_v2_proto_rawDescGZIP(), []int{0}
}

func (x *CreatorStoreProduct) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *CreatorStoreProduct) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// A Create request for a  creator-store-product resource.
type CreateCreatorStoreProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A field for the parent of creator-store-product
	Parent string `protobuf:"bytes,10013,opt,name=parent,proto3" json:"parent,omitempty"`
	// An id that uniquely identifies the resource within the collection
	Id string `protobuf:"bytes,10014,opt,name=id,proto3" json:"id,omitempty"`
	// The resource to perform the operation on.
	CreatorStoreProduct *CreatorStoreProduct `protobuf:"bytes,10015,opt,name=creator_store_product,json=creatorStoreProduct,proto3" json:"creator_store_product,omitempty"`
}

func (x *CreateCreatorStoreProductRequest) Reset() {
	*x = CreateCreatorStoreProductRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_roblox_v2_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCreatorStoreProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCreatorStoreProductRequest) ProtoMessage() {}

func (x *CreateCreatorStoreProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_example_roblox_v2_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCreatorStoreProductRequest.ProtoReflect.Descriptor instead.
func (*CreateCreatorStoreProductRequest) Descriptor() ([]byte, []int) {
	return file_example_roblox_v2_proto_rawDescGZIP(), []int{1}
}

func (x *CreateCreatorStoreProductRequest) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *CreateCreatorStoreProductRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateCreatorStoreProductRequest) GetCreatorStoreProduct() *CreatorStoreProduct {
	if x != nil {
		return x.CreatorStoreProduct
	}
	return nil
}

// Request message for the Getcreator-store-product method
type GetCreatorStoreProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The globally unique identifier for the resource
	Path string `protobuf:"bytes,10018,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *GetCreatorStoreProductRequest) Reset() {
	*x = GetCreatorStoreProductRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_roblox_v2_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCreatorStoreProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCreatorStoreProductRequest) ProtoMessage() {}

func (x *GetCreatorStoreProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_example_roblox_v2_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCreatorStoreProductRequest.ProtoReflect.Descriptor instead.
func (*GetCreatorStoreProductRequest) Descriptor() ([]byte, []int) {
	return file_example_roblox_v2_proto_rawDescGZIP(), []int{2}
}

func (x *GetCreatorStoreProductRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

// Request message for the UpdateCreatorStoreProduct method
type UpdateCreatorStoreProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The globally unique identifier for the resource
	Path string `protobuf:"bytes,10018,opt,name=path,proto3" json:"path,omitempty"`
	// The resource to perform the operation on.
	CreatorStoreProduct *CreatorStoreProduct `protobuf:"bytes,10015,opt,name=creator_store_product,json=creatorStoreProduct,proto3" json:"creator_store_product,omitempty"`
	// The update mask for the resource
	UpdateMask *fieldmaskpb.FieldMask `protobuf:"bytes,10012,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
}

func (x *UpdateCreatorStoreProductRequest) Reset() {
	*x = UpdateCreatorStoreProductRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_roblox_v2_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCreatorStoreProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCreatorStoreProductRequest) ProtoMessage() {}

func (x *UpdateCreatorStoreProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_example_roblox_v2_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCreatorStoreProductRequest.ProtoReflect.Descriptor instead.
func (*UpdateCreatorStoreProductRequest) Descriptor() ([]byte, []int) {
	return file_example_roblox_v2_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateCreatorStoreProductRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *UpdateCreatorStoreProductRequest) GetCreatorStoreProduct() *CreatorStoreProduct {
	if x != nil {
		return x.CreatorStoreProduct
	}
	return nil
}

func (x *UpdateCreatorStoreProductRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

// A DataStore.
type DataStore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Field for path.
	Path string `protobuf:"bytes,10000,opt,name=path,proto3" json:"path,omitempty"`
	// Field for id.
	Id string `protobuf:"bytes,10001,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DataStore) Reset() {
	*x = DataStore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_roblox_v2_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataStore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataStore) ProtoMessage() {}

func (x *DataStore) ProtoReflect() protoreflect.Message {
	mi := &file_example_roblox_v2_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataStore.ProtoReflect.Descriptor instead.
func (*DataStore) Descriptor() ([]byte, []int) {
	return file_example_roblox_v2_proto_rawDescGZIP(), []int{4}
}

func (x *DataStore) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *DataStore) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Request message for the Getdata-store method
type GetDataStoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The globally unique identifier for the resource
	Path string `protobuf:"bytes,10018,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *GetDataStoreRequest) Reset() {
	*x = GetDataStoreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_roblox_v2_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDataStoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDataStoreRequest) ProtoMessage() {}

func (x *GetDataStoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_example_roblox_v2_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDataStoreRequest.ProtoReflect.Descriptor instead.
func (*GetDataStoreRequest) Descriptor() ([]byte, []int) {
	return file_example_roblox_v2_proto_rawDescGZIP(), []int{5}
}

func (x *GetDataStoreRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

// Request message for the Listdata-store method
type ListDataStoresRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A field for the parent of data-store
	Parent string `protobuf:"bytes,10013,opt,name=parent,proto3" json:"parent,omitempty"`
	// The page token indicating the starting point of the page
	PageToken string `protobuf:"bytes,10010,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// The maximum number of resources to return in a single page.
	MaxPageSize int32 `protobuf:"varint,10017,opt,name=max_page_size,json=maxPageSize,proto3" json:"max_page_size,omitempty"`
}

func (x *ListDataStoresRequest) Reset() {
	*x = ListDataStoresRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_roblox_v2_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDataStoresRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDataStoresRequest) ProtoMessage() {}

func (x *ListDataStoresRequest) ProtoReflect() protoreflect.Message {
	mi := &file_example_roblox_v2_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDataStoresRequest.ProtoReflect.Descriptor instead.
func (*ListDataStoresRequest) Descriptor() ([]byte, []int) {
	return file_example_roblox_v2_proto_rawDescGZIP(), []int{6}
}

func (x *ListDataStoresRequest) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *ListDataStoresRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListDataStoresRequest) GetMaxPageSize() int32 {
	if x != nil {
		return x.MaxPageSize
	}
	return 0
}

// Response message for the Listdata-store method
type ListDataStoresResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A list of data-stores
	Results []*DataStore `protobuf:"bytes,10016,rep,name=results,proto3" json:"results,omitempty"`
	// The page token indicating the ending point of this response.
	NextPageToken string `protobuf:"bytes,10011,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListDataStoresResponse) Reset() {
	*x = ListDataStoresResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_roblox_v2_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDataStoresResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDataStoresResponse) ProtoMessage() {}

func (x *ListDataStoresResponse) ProtoReflect() protoreflect.Message {
	mi := &file_example_roblox_v2_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDataStoresResponse.ProtoReflect.Descriptor instead.
func (*ListDataStoresResponse) Descriptor() ([]byte, []int) {
	return file_example_roblox_v2_proto_rawDescGZIP(), []int{7}
}

func (x *ListDataStoresResponse) GetResults() []*DataStore {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *ListDataStoresResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

// A DataStoreEntry.
type DataStoreEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Field for attributes.
	Attributes *DataStoreEntry_Attributes `protobuf:"bytes,1,opt,name=attributes,proto3" json:"attributes,omitempty"`
	// Field for value.
	Value *DataStoreEntry_Value `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	// Field for path.
	Path string `protobuf:"bytes,10000,opt,name=path,proto3" json:"path,omitempty"`
	// Field for id.
	Id string `protobuf:"bytes,10001,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DataStoreEntry) Reset() {
	*x = DataStoreEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_roblox_v2_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataStoreEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataStoreEntry) ProtoMessage() {}

func (x *DataStoreEntry) ProtoReflect() protoreflect.Message {
	mi := &file_example_roblox_v2_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataStoreEntry.ProtoReflect.Descriptor instead.
func (*DataStoreEntry) Descriptor() ([]byte, []int) {
	return file_example_roblox_v2_proto_rawDescGZIP(), []int{8}
}

func (x *DataStoreEntry) GetAttributes() *DataStoreEntry_Attributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *DataStoreEntry) GetValue() *DataStoreEntry_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *DataStoreEntry) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *DataStoreEntry) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// A Create request for a  data-store-entry resource.
type CreateDataStoreEntryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A field for the parent of data-store-entry
	Parent string `protobuf:"bytes,10013,opt,name=parent,proto3" json:"parent,omitempty"`
	// An id that uniquely identifies the resource within the collection
	Id string `protobuf:"bytes,10014,opt,name=id,proto3" json:"id,omitempty"`
	// The resource to perform the operation on.
	DataStoreEntry *DataStoreEntry `protobuf:"bytes,10015,opt,name=data_store_entry,json=dataStoreEntry,proto3" json:"data_store_entry,omitempty"`
}

func (x *CreateDataStoreEntryRequest) Reset() {
	*x = CreateDataStoreEntryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_roblox_v2_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDataStoreEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDataStoreEntryRequest) ProtoMessage() {}

func (x *CreateDataStoreEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_example_roblox_v2_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDataStoreEntryRequest.ProtoReflect.Descriptor instead.
func (*CreateDataStoreEntryRequest) Descriptor() ([]byte, []int) {
	return file_example_roblox_v2_proto_rawDescGZIP(), []int{9}
}

func (x *CreateDataStoreEntryRequest) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *CreateDataStoreEntryRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateDataStoreEntryRequest) GetDataStoreEntry() *DataStoreEntry {
	if x != nil {
		return x.DataStoreEntry
	}
	return nil
}

// Request message for the Getdata-store-entry method
type GetDataStoreEntryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The globally unique identifier for the resource
	Path string `protobuf:"bytes,10018,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *GetDataStoreEntryRequest) Reset() {
	*x = GetDataStoreEntryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_roblox_v2_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDataStoreEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDataStoreEntryRequest) ProtoMessage() {}

func (x *GetDataStoreEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_example_roblox_v2_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDataStoreEntryRequest.ProtoReflect.Descriptor instead.
func (*GetDataStoreEntryRequest) Descriptor() ([]byte, []int) {
	return file_example_roblox_v2_proto_rawDescGZIP(), []int{10}
}

func (x *GetDataStoreEntryRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

// Request message for the Listdata-store-entry method
type ListDataStoreEntriesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A field for the parent of data-store-entry
	Parent string `protobuf:"bytes,10013,opt,name=parent,proto3" json:"parent,omitempty"`
	// The page token indicating the starting point of the page
	PageToken string `protobuf:"bytes,10010,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// The maximum number of resources to return in a single page.
	MaxPageSize int32 `protobuf:"varint,10017,opt,name=max_page_size,json=maxPageSize,proto3" json:"max_page_size,omitempty"`
}

func (x *ListDataStoreEntriesRequest) Reset() {
	*x = ListDataStoreEntriesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_roblox_v2_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDataStoreEntriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDataStoreEntriesRequest) ProtoMessage() {}

func (x *ListDataStoreEntriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_example_roblox_v2_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDataStoreEntriesRequest.ProtoReflect.Descriptor instead.
func (*ListDataStoreEntriesRequest) Descriptor() ([]byte, []int) {
	return file_example_roblox_v2_proto_rawDescGZIP(), []int{11}
}

func (x *ListDataStoreEntriesRequest) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *ListDataStoreEntriesRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListDataStoreEntriesRequest) GetMaxPageSize() int32 {
	if x != nil {
		return x.MaxPageSize
	}
	return 0
}

// Response message for the Listdata-store-entry method
type ListDataStoreEntriesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A list of data-store-entries
	Results []*DataStoreEntry `protobuf:"bytes,10016,rep,name=results,proto3" json:"results,omitempty"`
	// The page token indicating the ending point of this response.
	NextPageToken string `protobuf:"bytes,10011,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListDataStoreEntriesResponse) Reset() {
	*x = ListDataStoreEntriesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_roblox_v2_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDataStoreEntriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDataStoreEntriesResponse) ProtoMessage() {}

func (x *ListDataStoreEntriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_example_roblox_v2_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDataStoreEntriesResponse.ProtoReflect.Descriptor instead.
func (*ListDataStoreEntriesResponse) Descriptor() ([]byte, []int) {
	return file_example_roblox_v2_proto_rawDescGZIP(), []int{12}
}

func (x *ListDataStoreEntriesResponse) GetResults() []*DataStoreEntry {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *ListDataStoreEntriesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

// A Universe.
type Universe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Field for description.
	Description string `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	// Field for displayName.
	DisplayName string `protobuf:"bytes,2,opt,name=displayName,proto3" json:"displayName,omitempty"`
	// Field for mobileEnabled.
	MobileEnabled bool `protobuf:"varint,3,opt,name=mobileEnabled,proto3" json:"mobileEnabled,omitempty"`
	// Field for desktopEnabled.
	DesktopEnabled bool `protobuf:"varint,4,opt,name=desktopEnabled,proto3" json:"desktopEnabled,omitempty"`
	// Field for tabletEnabled.
	TabletEnabled bool `protobuf:"varint,5,opt,name=tabletEnabled,proto3" json:"tabletEnabled,omitempty"`
	// Field for path.
	Path string `protobuf:"bytes,10000,opt,name=path,proto3" json:"path,omitempty"`
	// Field for id.
	Id string `protobuf:"bytes,10001,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Universe) Reset() {
	*x = Universe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_roblox_v2_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Universe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Universe) ProtoMessage() {}

func (x *Universe) ProtoReflect() protoreflect.Message {
	mi := &file_example_roblox_v2_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Universe.ProtoReflect.Descriptor instead.
func (*Universe) Descriptor() ([]byte, []int) {
	return file_example_roblox_v2_proto_rawDescGZIP(), []int{13}
}

func (x *Universe) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Universe) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *Universe) GetMobileEnabled() bool {
	if x != nil {
		return x.MobileEnabled
	}
	return false
}

func (x *Universe) GetDesktopEnabled() bool {
	if x != nil {
		return x.DesktopEnabled
	}
	return false
}

func (x *Universe) GetTabletEnabled() bool {
	if x != nil {
		return x.TabletEnabled
	}
	return false
}

func (x *Universe) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Universe) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// A Create request for a  universe resource.
type CreateUniverseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A field for the parent of universe
	Parent string `protobuf:"bytes,10013,opt,name=parent,proto3" json:"parent,omitempty"`
	// An id that uniquely identifies the resource within the collection
	Id string `protobuf:"bytes,10014,opt,name=id,proto3" json:"id,omitempty"`
	// The resource to perform the operation on.
	Universe *Universe `protobuf:"bytes,10015,opt,name=universe,proto3" json:"universe,omitempty"`
}

func (x *CreateUniverseRequest) Reset() {
	*x = CreateUniverseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_roblox_v2_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUniverseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUniverseRequest) ProtoMessage() {}

func (x *CreateUniverseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_example_roblox_v2_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUniverseRequest.ProtoReflect.Descriptor instead.
func (*CreateUniverseRequest) Descriptor() ([]byte, []int) {
	return file_example_roblox_v2_proto_rawDescGZIP(), []int{14}
}

func (x *CreateUniverseRequest) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *CreateUniverseRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateUniverseRequest) GetUniverse() *Universe {
	if x != nil {
		return x.Universe
	}
	return nil
}

// Request message for the Getuniverse method
type GetUniverseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The globally unique identifier for the resource
	Path string `protobuf:"bytes,10018,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *GetUniverseRequest) Reset() {
	*x = GetUniverseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_roblox_v2_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUniverseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUniverseRequest) ProtoMessage() {}

func (x *GetUniverseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_example_roblox_v2_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUniverseRequest.ProtoReflect.Descriptor instead.
func (*GetUniverseRequest) Descriptor() ([]byte, []int) {
	return file_example_roblox_v2_proto_rawDescGZIP(), []int{15}
}

func (x *GetUniverseRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

// Request message for the UpdateUniverse method
type UpdateUniverseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The globally unique identifier for the resource
	Path string `protobuf:"bytes,10018,opt,name=path,proto3" json:"path,omitempty"`
	// The resource to perform the operation on.
	Universe *Universe `protobuf:"bytes,10015,opt,name=universe,proto3" json:"universe,omitempty"`
	// The update mask for the resource
	UpdateMask *fieldmaskpb.FieldMask `protobuf:"bytes,10012,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
}

func (x *UpdateUniverseRequest) Reset() {
	*x = UpdateUniverseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_roblox_v2_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUniverseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUniverseRequest) ProtoMessage() {}

func (x *UpdateUniverseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_example_roblox_v2_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUniverseRequest.ProtoReflect.Descriptor instead.
func (*UpdateUniverseRequest) Descriptor() ([]byte, []int) {
	return file_example_roblox_v2_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateUniverseRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *UpdateUniverseRequest) GetUniverse() *Universe {
	if x != nil {
		return x.Universe
	}
	return nil
}

func (x *UpdateUniverseRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

// A User.
type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Field for displayName.
	DisplayName string `protobuf:"bytes,2,opt,name=displayName,proto3" json:"displayName,omitempty"`
	// Field for path.
	Path string `protobuf:"bytes,10000,opt,name=path,proto3" json:"path,omitempty"`
	// Field for id.
	Id string `protobuf:"bytes,10001,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_roblox_v2_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_example_roblox_v2_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_example_roblox_v2_proto_rawDescGZIP(), []int{17}
}

func (x *User) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *User) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *User) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Request message for the Getuser method
type GetUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The globally unique identifier for the resource
	Path string `protobuf:"bytes,10018,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *GetUserRequest) Reset() {
	*x = GetUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_roblox_v2_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRequest) ProtoMessage() {}

func (x *GetUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_example_roblox_v2_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRequest.ProtoReflect.Descriptor instead.
func (*GetUserRequest) Descriptor() ([]byte, []int) {
	return file_example_roblox_v2_proto_rawDescGZIP(), []int{18}
}

func (x *GetUserRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

// A Attributes.
type DataStoreEntry_Attributes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DataStoreEntry_Attributes) Reset() {
	*x = DataStoreEntry_Attributes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_roblox_v2_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataStoreEntry_Attributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataStoreEntry_Attributes) ProtoMessage() {}

func (x *DataStoreEntry_Attributes) ProtoReflect() protoreflect.Message {
	mi := &file_example_roblox_v2_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataStoreEntry_Attributes.ProtoReflect.Descriptor instead.
func (*DataStoreEntry_Attributes) Descriptor() ([]byte, []int) {
	return file_example_roblox_v2_proto_rawDescGZIP(), []int{8, 0}
}

// A Value.
type DataStoreEntry_Value struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DataStoreEntry_Value) Reset() {
	*x = DataStoreEntry_Value{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_roblox_v2_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataStoreEntry_Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataStoreEntry_Value) ProtoMessage() {}

func (x *DataStoreEntry_Value) ProtoReflect() protoreflect.Message {
	mi := &file_example_roblox_v2_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataStoreEntry_Value.ProtoReflect.Descriptor instead.
func (*DataStoreEntry_Value) Descriptor() ([]byte, []int) {
	return file_example_roblox_v2_proto_rawDescGZIP(), []int{8, 1}
}

var File_example_roblox_v2_proto protoreflect.FileDescriptor

var file_example_roblox_v2_proto_rawDesc = []byte{
	0x0a, 0x17, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2f, 0x72, 0x6f, 0x62, 0x6c, 0x6f, 0x78,
	0x2f, 0x76, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x65, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x2e, 0x72, 0x6f, 0x62, 0x6c, 0x6f, 0x78, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3b,
	0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x13, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x90, 0x4e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x0f, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x91, 0x4e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xb3, 0x01, 0x0a, 0x20,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1f, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x9d, 0x4e, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x06, 0xe0, 0x41, 0x02, 0xfa, 0x41, 0x00, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x12, 0x0f, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x9e, 0x4e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x5d, 0x0a, 0x15, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x9f, 0x4e, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x72, 0x6f, 0x62,
	0x6c, 0x6f, 0x78, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x13, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x22, 0x64, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x43, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0xa2, 0x4e, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x2e, 0xe0, 0x41, 0x02, 0xfa, 0x41, 0x28, 0x0a, 0x26, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x72, 0x6f, 0x62, 0x6c, 0x6f, 0x78, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x2d, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x84, 0x02, 0x0a, 0x20, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x18, 0xa2, 0x4e, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2e, 0xe0, 0x41, 0x02,
	0xfa, 0x41, 0x28, 0x0a, 0x26, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x72, 0x6f, 0x62, 0x6c, 0x6f,
	0x78, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x2d, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x2d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x12, 0x5d, 0x0a, 0x15, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x9f, 0x4e, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x72, 0x6f, 0x62, 0x6c,
	0x6f, 0x78, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x13, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x12, 0x3c, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18,
	0x9c, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61,
	0x73, 0x6b, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0x31,
	0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x13, 0x0a, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x90, 0x4e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x12, 0x0f, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x91, 0x4e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x4f, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x18, 0xa2, 0x4e, 0x20, 0x01, 0x28, 0x09, 0x42, 0x23, 0xe0, 0x41, 0x02, 0xfa, 0x41, 0x1d, 0x0a,
	0x1b, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x72, 0x6f, 0x62, 0x6c, 0x6f, 0x78, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2d, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x22, 0x7d, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x06, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x9d, 0x4e, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe0, 0x41,
	0x02, 0xfa, 0x41, 0x00, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x9a, 0x4e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x23, 0x0a, 0x0d,
	0x6d, 0x61, 0x78, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0xa1, 0x4e,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x22, 0x77, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0xa0, 0x4e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x72, 0x6f, 0x62, 0x6c, 0x6f, 0x78, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x12, 0x27, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x9b, 0x4e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78,
	0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xd4, 0x01, 0x0a, 0x0e, 0x44,
	0x61, 0x74, 0x61, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x49, 0x0a,
	0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x72, 0x6f, 0x62, 0x6c,
	0x6f, 0x78, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x0a, 0x61, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x3a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x2e, 0x72, 0x6f, 0x62, 0x6c, 0x6f, 0x78, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x13, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x90, 0x4e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x0f, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x91, 0x4e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x1a, 0x0c, 0x0a, 0x0a, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x1a, 0x07, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x9f, 0x01, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1f, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x9d, 0x4e, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x06, 0xe0, 0x41, 0x02, 0xfa, 0x41, 0x00, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x12, 0x0f, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x9e, 0x4e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x4e, 0x0a, 0x10, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x9f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x72, 0x6f, 0x62, 0x6c, 0x6f, 0x78, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x03,
	0xe0, 0x41, 0x02, 0x52, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x22, 0x5a, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x3e, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0xa2, 0x4e, 0x20, 0x01, 0x28, 0x09, 0x42, 0x29,
	0xe0, 0x41, 0x02, 0xfa, 0x41, 0x23, 0x0a, 0x21, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x72, 0x6f,
	0x62, 0x6c, 0x6f, 0x78, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2d, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x2d, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22,
	0x83, 0x01, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1f, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x9d, 0x4e, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x06, 0xe0, 0x41, 0x02, 0xfa, 0x41, 0x00, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x9a,
	0x4e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0xa1, 0x4e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x50, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x82, 0x01, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x18, 0xa0, 0x4e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x2e, 0x72, 0x6f, 0x62, 0x6c, 0x6f, 0x78, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x12, 0x27, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x9b, 0x4e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78,
	0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xe8, 0x01, 0x0a, 0x08, 0x55,
	0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6d,
	0x6f, 0x62, 0x69, 0x6c, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x64, 0x65, 0x73, 0x6b, 0x74,
	0x6f, 0x70, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0d, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12,
	0x13, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x90, 0x4e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x12, 0x0f, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x91, 0x4e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x85, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1f, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x9d, 0x4e, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x06, 0xe0, 0x41, 0x02, 0xfa, 0x41, 0x00, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x12, 0x0f, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x9e, 0x4e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x3a, 0x0a, 0x08, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x18, 0x9f, 0x4e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x72,
	0x6f, 0x62, 0x6c, 0x6f, 0x78, 0x2e, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x42, 0x03,
	0xe0, 0x41, 0x02, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x22, 0x4c, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0xa2, 0x4e, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x21, 0xe0, 0x41, 0x02, 0xfa, 0x41, 0x1b, 0x0a, 0x19, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x72, 0x6f, 0x62, 0x6c, 0x6f, 0x78, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x75, 0x6e, 0x69,
	0x76, 0x65, 0x72, 0x73, 0x65, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0xc9, 0x01, 0x0a, 0x15,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0xa2, 0x4e,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x21, 0xe0, 0x41, 0x02, 0xfa, 0x41, 0x1b, 0x0a, 0x19, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x72, 0x6f, 0x62, 0x6c, 0x6f, 0x78, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x75,
	0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x3a, 0x0a,
	0x08, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x18, 0x9f, 0x4e, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x72, 0x6f, 0x62, 0x6c, 0x6f,
	0x78, 0x2e, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52,
	0x08, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x9c, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0x53, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x25, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x13, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x90,
	0x4e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x0f, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x91, 0x4e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x44, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32,
	0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0xa2, 0x4e, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1d, 0xe0,
	0x41, 0x02, 0xfa, 0x41, 0x17, 0x0a, 0x15, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x72, 0x6f, 0x62,
	0x6c, 0x6f, 0x78, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x52, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x32, 0xf5, 0x0e, 0x0a, 0x05, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x12, 0xd2, 0x01, 0x0a,
	0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x30, 0x2e, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x72, 0x6f, 0x62, 0x6c, 0x6f, 0x78, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x65,
	0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x72, 0x6f, 0x62, 0x6c, 0x6f, 0x78, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x22, 0x5e, 0xda, 0x41, 0x1c, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x2c, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x39, 0x3a, 0x15, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x22,
	0x20, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x2d, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73,
	0x7d, 0x12, 0x9d, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x2d, 0x2e, 0x65,
	0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x72, 0x6f, 0x62, 0x6c, 0x6f, 0x78, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x65, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x72, 0x6f, 0x62, 0x6c, 0x6f, 0x78, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x22, 0x2f, 0xda, 0x41, 0x04, 0x70, 0x61, 0x74, 0x68, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x12,
	0x20, 0x2f, 0x7b, 0x70, 0x61, 0x74, 0x68, 0x3d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x2d,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x2d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x2f, 0x2a,
	0x7d, 0x12, 0xd7, 0x01, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12,
	0x30, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x72, 0x6f, 0x62, 0x6c, 0x6f, 0x78,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x23, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x72, 0x6f, 0x62, 0x6c,
	0x6f, 0x78, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x22, 0x63, 0xda, 0x41, 0x21, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x2c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x39, 0x3a, 0x15, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x32, 0x20, 0x2f, 0x7b, 0x70, 0x61, 0x74,
	0x68, 0x3d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x2d, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2d,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0x80, 0x01, 0x0a, 0x0c,
	0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x23, 0x2e, 0x65,
	0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x72, 0x6f, 0x62, 0x6c, 0x6f, 0x78, 0x2e, 0x47, 0x65,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x19, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x72, 0x6f, 0x62, 0x6c,
	0x6f, 0x78, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x22, 0x30, 0xda, 0x41,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x12, 0x21, 0x2f, 0x7b, 0x70,
	0x61, 0x74, 0x68, 0x3d, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x73, 0x2f, 0x2a, 0x2f,
	0x64, 0x61, 0x74, 0x61, 0x2d, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0x93,
	0x01, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x73, 0x12, 0x25, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x72, 0x6f, 0x62, 0x6c,
	0x6f, 0x78, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x2e, 0x72, 0x6f, 0x62, 0x6c, 0x6f, 0x78, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x32, 0xda, 0x41, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x23, 0x12, 0x21, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x75, 0x6e, 0x69, 0x76,
	0x65, 0x72, 0x73, 0x65, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2d, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x73, 0x12, 0xc4, 0x01, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x2b, 0x2e,
	0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x72, 0x6f, 0x62, 0x6c, 0x6f, 0x78, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x72, 0x6f, 0x62, 0x6c, 0x6f, 0x78, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x5f, 0xda, 0x41, 0x17, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x2c, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3f, 0x3a, 0x10, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x2b,
	0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73,
	0x65, 0x73, 0x2f, 0x2a, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2d, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x73,
	0x2f, 0x2a, 0x7d, 0x2f, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x99, 0x01, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x28, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x72, 0x6f, 0x62, 0x6c,
	0x6f, 0x78, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x65, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x72, 0x6f, 0x62, 0x6c, 0x6f, 0x78, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x3a, 0xda, 0x41, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x12, 0x2b, 0x2f, 0x7b, 0x70, 0x61,
	0x74, 0x68, 0x3d, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x73, 0x2f, 0x2a, 0x2f, 0x64,
	0x61, 0x74, 0x61, 0x2d, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x74,
	0x72, 0x69, 0x65, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0xaf, 0x01, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73,
	0x12, 0x2b, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x72, 0x6f, 0x62, 0x6c, 0x6f,
	0x78, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x45,
	0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e,
	0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x72, 0x6f, 0x62, 0x6c, 0x6f, 0x78, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x45, 0x6e, 0x74, 0x72,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3c, 0xda, 0x41, 0x06,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x12, 0x2b, 0x2f, 0x7b,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x73,
	0x2f, 0x2a, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2d, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x2f, 0x2a,
	0x7d, 0x2f, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x8a, 0x01, 0x0a, 0x0e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x12, 0x25, 0x2e, 0x65,
	0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x72, 0x6f, 0x62, 0x6c, 0x6f, 0x78, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x72, 0x6f,
	0x62, 0x6c, 0x6f, 0x78, 0x2e, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x22, 0x37, 0xda,
	0x41, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x2c, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73,
	0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x3a, 0x08, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73,
	0x65, 0x22, 0x13, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x75, 0x6e, 0x69, 0x76,
	0x65, 0x72, 0x73, 0x65, 0x73, 0x7d, 0x12, 0x6f, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x69,
	0x76, 0x65, 0x72, 0x73, 0x65, 0x12, 0x22, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e,
	0x72, 0x6f, 0x62, 0x6c, 0x6f, 0x78, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72,
	0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x65, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x2e, 0x72, 0x6f, 0x62, 0x6c, 0x6f, 0x78, 0x2e, 0x55, 0x6e, 0x69, 0x76, 0x65,
	0x72, 0x73, 0x65, 0x22, 0x22, 0xda, 0x41, 0x04, 0x70, 0x61, 0x74, 0x68, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x15, 0x12, 0x13, 0x2f, 0x7b, 0x70, 0x61, 0x74, 0x68, 0x3d, 0x75, 0x6e, 0x69, 0x76, 0x65,
	0x72, 0x73, 0x65, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0x8f, 0x01, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x12, 0x25, 0x2e, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x72, 0x6f, 0x62, 0x6c, 0x6f, 0x78, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x18, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x72, 0x6f, 0x62, 0x6c,
	0x6f, 0x78, 0x2e, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x22, 0x3c, 0xda, 0x41, 0x14,
	0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x2c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x6d, 0x61, 0x73, 0x6b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x3a, 0x08, 0x75, 0x6e, 0x69, 0x76,
	0x65, 0x72, 0x73, 0x65, 0x32, 0x13, 0x2f, 0x7b, 0x70, 0x61, 0x74, 0x68, 0x3d, 0x75, 0x6e, 0x69,
	0x76, 0x65, 0x72, 0x73, 0x65, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0x5f, 0x0a, 0x07, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x1e, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x72,
	0x6f, 0x62, 0x6c, 0x6f, 0x78, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x72,
	0x6f, 0x62, 0x6c, 0x6f, 0x78, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x22, 0x1e, 0xda, 0x41, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x12, 0x0f, 0x2f, 0x7b, 0x70, 0x61, 0x74,
	0x68, 0x3d, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x2a, 0x7d, 0x42, 0x08, 0x5a, 0x06, 0x2f, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_example_roblox_v2_proto_rawDescOnce sync.Once
	file_example_roblox_v2_proto_rawDescData = file_example_roblox_v2_proto_rawDesc
)

func file_example_roblox_v2_proto_rawDescGZIP() []byte {
	file_example_roblox_v2_proto_rawDescOnce.Do(func() {
		file_example_roblox_v2_proto_rawDescData = protoimpl.X.CompressGZIP(file_example_roblox_v2_proto_rawDescData)
	})
	return file_example_roblox_v2_proto_rawDescData
}

var file_example_roblox_v2_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_example_roblox_v2_proto_goTypes = []interface{}{
	(*CreatorStoreProduct)(nil),              // 0: example.roblox.CreatorStoreProduct
	(*CreateCreatorStoreProductRequest)(nil), // 1: example.roblox.CreateCreatorStoreProductRequest
	(*GetCreatorStoreProductRequest)(nil),    // 2: example.roblox.GetCreatorStoreProductRequest
	(*UpdateCreatorStoreProductRequest)(nil), // 3: example.roblox.UpdateCreatorStoreProductRequest
	(*DataStore)(nil),                        // 4: example.roblox.DataStore
	(*GetDataStoreRequest)(nil),              // 5: example.roblox.GetDataStoreRequest
	(*ListDataStoresRequest)(nil),            // 6: example.roblox.ListDataStoresRequest
	(*ListDataStoresResponse)(nil),           // 7: example.roblox.ListDataStoresResponse
	(*DataStoreEntry)(nil),                   // 8: example.roblox.DataStoreEntry
	(*CreateDataStoreEntryRequest)(nil),      // 9: example.roblox.CreateDataStoreEntryRequest
	(*GetDataStoreEntryRequest)(nil),         // 10: example.roblox.GetDataStoreEntryRequest
	(*ListDataStoreEntriesRequest)(nil),      // 11: example.roblox.ListDataStoreEntriesRequest
	(*ListDataStoreEntriesResponse)(nil),     // 12: example.roblox.ListDataStoreEntriesResponse
	(*Universe)(nil),                         // 13: example.roblox.Universe
	(*CreateUniverseRequest)(nil),            // 14: example.roblox.CreateUniverseRequest
	(*GetUniverseRequest)(nil),               // 15: example.roblox.GetUniverseRequest
	(*UpdateUniverseRequest)(nil),            // 16: example.roblox.UpdateUniverseRequest
	(*User)(nil),                             // 17: example.roblox.User
	(*GetUserRequest)(nil),                   // 18: example.roblox.GetUserRequest
	(*DataStoreEntry_Attributes)(nil),        // 19: example.roblox.DataStoreEntry.Attributes
	(*DataStoreEntry_Value)(nil),             // 20: example.roblox.DataStoreEntry.Value
	(*fieldmaskpb.FieldMask)(nil),            // 21: google.protobuf.FieldMask
}
var file_example_roblox_v2_proto_depIdxs = []int32{
	0,  // 0: example.roblox.CreateCreatorStoreProductRequest.creator_store_product:type_name -> example.roblox.CreatorStoreProduct
	0,  // 1: example.roblox.UpdateCreatorStoreProductRequest.creator_store_product:type_name -> example.roblox.CreatorStoreProduct
	21, // 2: example.roblox.UpdateCreatorStoreProductRequest.update_mask:type_name -> google.protobuf.FieldMask
	4,  // 3: example.roblox.ListDataStoresResponse.results:type_name -> example.roblox.DataStore
	19, // 4: example.roblox.DataStoreEntry.attributes:type_name -> example.roblox.DataStoreEntry.Attributes
	20, // 5: example.roblox.DataStoreEntry.value:type_name -> example.roblox.DataStoreEntry.Value
	8,  // 6: example.roblox.CreateDataStoreEntryRequest.data_store_entry:type_name -> example.roblox.DataStoreEntry
	8,  // 7: example.roblox.ListDataStoreEntriesResponse.results:type_name -> example.roblox.DataStoreEntry
	13, // 8: example.roblox.CreateUniverseRequest.universe:type_name -> example.roblox.Universe
	13, // 9: example.roblox.UpdateUniverseRequest.universe:type_name -> example.roblox.Universe
	21, // 10: example.roblox.UpdateUniverseRequest.update_mask:type_name -> google.protobuf.FieldMask
	1,  // 11: example.roblox.Cloud.CreateCreatorStoreProduct:input_type -> example.roblox.CreateCreatorStoreProductRequest
	2,  // 12: example.roblox.Cloud.GetCreatorStoreProduct:input_type -> example.roblox.GetCreatorStoreProductRequest
	3,  // 13: example.roblox.Cloud.UpdateCreatorStoreProduct:input_type -> example.roblox.UpdateCreatorStoreProductRequest
	5,  // 14: example.roblox.Cloud.GetDataStore:input_type -> example.roblox.GetDataStoreRequest
	6,  // 15: example.roblox.Cloud.ListDataStores:input_type -> example.roblox.ListDataStoresRequest
	9,  // 16: example.roblox.Cloud.CreateDataStoreEntry:input_type -> example.roblox.CreateDataStoreEntryRequest
	10, // 17: example.roblox.Cloud.GetDataStoreEntry:input_type -> example.roblox.GetDataStoreEntryRequest
	11, // 18: example.roblox.Cloud.ListDataStoreEntries:input_type -> example.roblox.ListDataStoreEntriesRequest
	14, // 19: example.roblox.Cloud.CreateUniverse:input_type -> example.roblox.CreateUniverseRequest
	15, // 20: example.roblox.Cloud.GetUniverse:input_type -> example.roblox.GetUniverseRequest
	16, // 21: example.roblox.Cloud.UpdateUniverse:input_type -> example.roblox.UpdateUniverseRequest
	18, // 22: example.roblox.Cloud.GetUser:input_type -> example.roblox.GetUserRequest
	0,  // 23: example.roblox.Cloud.CreateCreatorStoreProduct:output_type -> example.roblox.CreatorStoreProduct
	0,  // 24: example.roblox.Cloud.GetCreatorStoreProduct:output_type -> example.roblox.CreatorStoreProduct
	0,  // 25: example.roblox.Cloud.UpdateCreatorStoreProduct:output_type -> example.roblox.CreatorStoreProduct
	4,  // 26: example.roblox.Cloud.GetDataStore:output_type -> example.roblox.DataStore
	7,  // 27: example.roblox.Cloud.ListDataStores:output_type -> example.roblox.ListDataStoresResponse
	8,  // 28: example.roblox.Cloud.CreateDataStoreEntry:output_type -> example.roblox.DataStoreEntry
	8,  // 29: example.roblox.Cloud.GetDataStoreEntry:output_type -> example.roblox.DataStoreEntry
	12, // 30: example.roblox.Cloud.ListDataStoreEntries:output_type -> example.roblox.ListDataStoreEntriesResponse
	13, // 31: example.roblox.Cloud.CreateUniverse:output_type -> example.roblox.Universe
	13, // 32: example.roblox.Cloud.GetUniverse:output_type -> example.roblox.Universe
	13, // 33: example.roblox.Cloud.UpdateUniverse:output_type -> example.roblox.Universe
	17, // 34: example.roblox.Cloud.GetUser:output_type -> example.roblox.User
	23, // [23:35] is the sub-list for method output_type
	11, // [11:23] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_example_roblox_v2_proto_init() }
func file_example_roblox_v2_proto_init() {
	if File_example_roblox_v2_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_example_roblox_v2_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatorStoreProduct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_example_roblox_v2_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCreatorStoreProductRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_example_roblox_v2_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCreatorStoreProductRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_example_roblox_v2_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCreatorStoreProductRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_example_roblox_v2_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataStore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_example_roblox_v2_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDataStoreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_example_roblox_v2_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDataStoresRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_example_roblox_v2_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDataStoresResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_example_roblox_v2_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataStoreEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_example_roblox_v2_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDataStoreEntryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_example_roblox_v2_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDataStoreEntryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_example_roblox_v2_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDataStoreEntriesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_example_roblox_v2_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDataStoreEntriesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_example_roblox_v2_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Universe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_example_roblox_v2_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUniverseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_example_roblox_v2_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUniverseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_example_roblox_v2_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUniverseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_example_roblox_v2_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_example_roblox_v2_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_example_roblox_v2_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataStoreEntry_Attributes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_example_roblox_v2_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataStoreEntry_Value); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_example_roblox_v2_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_example_roblox_v2_proto_goTypes,
		DependencyIndexes: file_example_roblox_v2_proto_depIdxs,
		MessageInfos:      file_example_roblox_v2_proto_msgTypes,
	}.Build()
	File_example_roblox_v2_proto = out.File
	file_example_roblox_v2_proto_rawDesc = nil
	file_example_roblox_v2_proto_goTypes = nil
	file_example_roblox_v2_proto_depIdxs = nil
}
