syntax = "proto3";

import "google/api/annotations.proto";

import "google/protobuf/empty.proto";

option go_package = "/bookstore";

message Author {
  string path = 1;
}

message CreateAuthorRequest {
  string id = 1;

  Author resource = 2;
}

message ReadAuthorRequest {
  string path = 1;
}

message DeleteAuthorRequest {
  string path = 1;
}

message Book {
  string path = 1;
}

message CreateBookRequest {
  string id = 1;

  Book resource = 2;
}

message ReadBookRequest {
  string path = 1;
}

message DeleteBookRequest {
  string path = 1;
}

message Publisher {
  string path = 1;
}

message CreatePublisherRequest {
  string id = 1;

  Publisher resource = 2;
}

message ReadPublisherRequest {
  string path = 1;
}

message DeletePublisherRequest {
  string path = 1;
}

service Bookstore {
  rpc CreateAuthor ( CreateAuthorRequest ) returns ( Author ) {
    option (google.api.http) = { post: "/{parent=publisher/*}/author" };
  }

  rpc ReadAuthor ( ReadAuthorRequest ) returns ( Author ) {
    option (google.api.http) = { get: "/{path=publisher/*/author/*}" };
  }

  rpc DeleteAuthor ( DeleteAuthorRequest ) returns ( google.protobuf.Empty ) {
    option (google.api.http) = { delete: "/{path=publisher/*/author/*}" };
  }

  rpc CreateBook ( CreateBookRequest ) returns ( Book ) {
    option (google.api.http) = { post: "/{parent=publisher/*}/book" };
  }

  rpc ReadBook ( ReadBookRequest ) returns ( Book ) {
    option (google.api.http) = { get: "/{path=publisher/*/book/*}" };
  }

  rpc DeleteBook ( DeleteBookRequest ) returns ( google.protobuf.Empty ) {
    option (google.api.http) = { delete: "/{path=publisher/*/book/*}" };
  }

  rpc CreatePublisher ( CreatePublisherRequest ) returns ( Publisher ) {
    option (google.api.http) = { post: "/publisher" };
  }

  rpc ReadPublisher ( ReadPublisherRequest ) returns ( Publisher ) {
    option (google.api.http) = { get: "/{path=publisher/*}" };
  }

  rpc DeletePublisher ( DeletePublisherRequest ) returns ( google.protobuf.Empty ) {
    option (google.api.http) = { delete: "/{path=publisher/*}" };
  }
}
