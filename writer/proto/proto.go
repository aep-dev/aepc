package proto

import (
	"bytes"
	"fmt"
	"strings"

	"github.com/jhump/protoreflect/desc/builder"
	"github.com/jhump/protoreflect/desc/protoprint"
	"github.com/toumorokoshi/aep-sandbox/aepc/schema"
	"google.golang.org/protobuf/types/descriptorpb"
)

func WriteServiceToProto(s *schema.Service) ([]byte, error) {
	fb := builder.NewFile("test.proto")
	fb.IsProto3 = true
	fb.SetComments(builder.Comments{
		LeadingComment: "this file is autogenerated by aepc",
	})
	serviceNameAsLower := fmt.Sprintf("/%s", strings.ToLower(s.Name))
	fo := &descriptorpb.FileOptions{
		GoPackage: &serviceNameAsLower,
	}
	fb.SetOptions(fo)
	sb := builder.NewService(s.Name)
	// so := &descriptorpb.ServiceOptions{
	// 	go_
	// }
	// sb.SetOptions(options *descriptorpb.ServiceOptions)
	fb.AddService(sb)
	for _, r := range s.Resources {
		err := AddResource(r, fb, sb)
		if err != nil {
			return []byte{}, fmt.Errorf("adding resource %v failed: %w", r.Kind, err)
		}
	}
	fd, err := fb.Build()
	if err != nil {
		return []byte{}, fmt.Errorf("unable to build service file %v: %w", fb.GetName(), err)
	}
	printer := protoprint.Printer{}
	var output bytes.Buffer
	err = printer.PrintProtoFile(fd, &output)
	if err != nil {
		return []byte{}, err
	}
	return output.Bytes(), nil
}
